(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{413:function(n,t,a){"use strict";a.r(t);var e=a(2),r=Object(e.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"call"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#call"}},[n._v("#")]),n._v(" call")]),n._v(" "),t("p",[n._v("首先看下call的定义：\ncall() 方法在使用一个指定的 this 值和若干个指定的参数值的前提下调用某个函数或方法。")]),n._v(" "),t("p",[n._v("循序渐进来实现call。")]),n._v(" "),t("ol",[t("li",[n._v("call方法是可以改变this指向的。")]),n._v(" "),t("li",[n._v("执行给定参数的函数。")]),n._v(" "),t("li",[n._v("返回执行函数之后的值。")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("Function.prototype.call2 = Function(context) {\n    context.fn = this;\n    context.fn();\n    delete context.fn;\n}\n\n")])])]),t("p",[n._v("现在实现给fn传递参数，用es6的方法很简单，剩余参数就行，但如果不用es6呢。首先先将参数拿到，从arguments里从第二个开始取。统一放到一个数组中，再用eval去执行函数")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("// 因为arguments是类数组对象，所以可以用for循环\nvar args = [];\nfor(var i = 1, len = arguments.length; i < len; i++) {\n    args.push('arguments[' + i + ']');\n}\n\n// 执行后 args为 [\"arguments[1]\", \"arguments[2]\", \"arguments[3]\"]\n\neval('context.fn(' + args +')')\n\n这里 args 会自动调用 Array.toString() 这个方法。\n\n")])])]),t("p",[n._v("看最终版")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\nFunction.prototype.call2 = function (context) {\n    var context = Object(context) || window;\n    context.fn = this;\n\n    var args = [];\n    for(var i = 1, len = arguments.length; i < len; i++) {\n        args.push('arguments[' + i + ']');\n    }\n\n    var result = eval('context.fn(' + args +')');\n\n    delete context.fn\n    return result;\n}\n\n")])])]),t("h1",{attrs:{id:"apply实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apply实现"}},[n._v("#")]),n._v(" apply实现")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\nFunction.prototype.apply = function (context, arr) {\n    var context = Object(context) || window;\n    context.fn = this;\n\n    var result;\n    if (!arr) {\n        result = context.fn();\n    }\n    else {\n        var args = [];\n        for (var i = 0, len = arr.length; i < len; i++) {\n            args.push('arr[' + i + ']');\n        }\n        result = eval('context.fn(' + args + ')')\n    }\n\n    delete context.fn\n    return result;\n}\n\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);