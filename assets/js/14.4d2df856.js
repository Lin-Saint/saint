(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{407:function(e,a,t){"use strict";t.r(a);var s=t(2),l=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )")]),e._v(" "),a("p"),e._v(" "),a("h1",{attrs:{id:"示例-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-1"}},[e._v("#")]),e._v(" 示例 1：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('输入：\n["CQueue","appendTail","deleteHead","deleteHead"]\n[[],[3],[],[]]\n输出：[null,null,3,-1]\n')])])]),a("h1",{attrs:{id:"示例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[e._v("#")]),e._v(" 示例 2：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('输入：\n["CQueue","deleteHead","appendTail","appendTail","deleteHead","deleteHead"]\n[[],[],[5],[2],[],[]]\n输出：[null,-1,null,null,5,2]\n')])])]),a("p",[e._v("提示：")]),e._v(" "),a("p",[e._v("1 <= values <= 10000\n最多会对 appendTail、deleteHead 进行 10000 次调用\n相关标签")]),e._v(" "),a("h1",{attrs:{id:"思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[e._v("#")]),e._v(" 思路：")]),e._v(" "),a("p",[e._v("栈是先进后出，实现deleteHead删除队头的元素可以把 stackA里的元素顺序从后往前放入stackB 例如：\nA： [1,2,3] 放入后")]),e._v(" "),a("p",[e._v("B:  [3,2,1],此时 A： [] 为空")]),e._v(" "),a("p",[e._v("再使用B.pop方法即可")]),e._v(" "),a("h1",{attrs:{id:"python3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python3"}},[e._v("#")]),e._v(" Python3")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("class CQueue:\n    def __init__(self):\n        self.A, self.B = [], []\n\n    def appendTail(self, value: int) -> None:\n        self.A.append(value)\n\n    def deleteHead(self) -> int:\n        if self.B: return self.B.pop()\n        if not self.A: return -1\n        while self.A:\n            self.B.append(self.A.pop())\n        return self.B.pop()\n")])])])])}),[],!1,null,null,null);a.default=l.exports}}]);