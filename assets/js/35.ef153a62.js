(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{425:function(n,e,t){"use strict";t.r(e);var a=t(2),r=Object(a.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("\n\nfunction convert(arr) {\n    const map = new Map()\n    let root = null;\n    arr.forEach(item => {\n        const { id, name, parentId} = item;\n        const treeItem = {id, name};\n\n        map.set(id,treeItem)\n        \n        const val = map.get(parentId);\n        if (val) {\n            if (!val.children) {\n                val.children = []  \n            }\n            val.children.push(treeItem)\n        } \n            \n        \n        console.log(map)\n        if (parentId === 0) {\n            root = treeItem\n        }\n    });\n    return root\n}\n\nconst arr = [{\n    id: 2,\n    name: '部门B',\n    parentId: 0\n},\n{\n    id: 3,\n    name: '部门C',\n    parentId: 1\n},\n{\n    id: 1,\n    name: '部门A',\n    parentId: 2\n},\n{\n    id: 4,\n    name: '部门D',\n    parentId: 1\n},\n{\n    id: 5,\n    name: '部门E',\n    parentId: 2\n},\n{\n    id: 6,\n    name: '部门F',\n    parentId: 3\n},\n{\n    id: 7,\n    name: '部门G',\n    parentId: 2\n},\n{\n    id: 8,\n    name: '部门H',\n    parentId: 4\n}\n]\nconsole.log(convert(arr))\n\n\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);