(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{424:function(t,n,s){"use strict";s.r(n);var e=s(2),r=Object(e.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"去除字符串中出现次数最少的字符-不改变原字符串的顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#去除字符串中出现次数最少的字符-不改变原字符串的顺序"}},[this._v("#")]),this._v(" 去除字符串中出现次数最少的字符，不改变原字符串的顺序")]),this._v(" "),t("p",[this._v("整体思路：用map存储各字符串出现的次数，再得到最小值，将字符串转为数组去掉最小值的字符。")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("function splitStr(str) {\n    const map = new Map()\n    for(let i = 0; i < str.length; i++) {\n        const val = map.get(str[i])\n        const count = val ? val + 1 : 1\n\n        map.set(str[i],count);\n    }\n\n    const min = Math.min(...map.values())\n\n    const result = str.split('').reduce((pre,cur)=>{\n        const count = map.get(cur);\n        if (min === count) {\n            return pre\n        } else {\n            return pre + cur\n        }\n    },'')\n    return result;\n}\n\n\nconst a = 'aaabbbcceeff'\n\nconsole.log(splitStr(a))\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);